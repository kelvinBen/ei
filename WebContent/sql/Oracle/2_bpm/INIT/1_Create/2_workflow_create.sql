
--通用流程
CREATE TABLE WF_UNIPROCESS
(
            ID VARCHAR (40) NOT NULL ,
            PROCESSID VARCHAR (255)  ,
            PROCESSNAME VARCHAR (255)  ,
            SUBJECT VARCHAR (255)  ,
            FORMID VARCHAR (100)  ,
            DATAID VARCHAR (100)  ,
            OPINION VARCHAR (3000)  ,
            OLDOPINION LONG RAW  ,
            USERID VARCHAR (30)  ,
            USERNAME VARCHAR (160)  ,
            OLDUSERID  VARCHAR (30),
            OLDUSERNAME VARCHAR (160)  ,
            OPNDATE VARCHAR (25)  ,
            FWDATE VARCHAR (25),
            STATUS CHAR (1)   
);
ALTER TABLE WF_UNIPROCESS
    ADD CONSTRAINT WfUniprocess_PK 
    PRIMARY KEY (ID);
    
CREATE TABLE WF_TASKACCREDIT
(
            ID VARCHAR (40) NOT NULL ,
            OLDORGANID VARCHAR (30) NOT NULL ,
            AGENTORGANID VARCHAR (30) NOT NULL ,
            TYPE CHAR (1) NOT NULL ,
            DATAID VARCHAR (255) NOT NULL ,
            DATANAME VARCHAR (255) NOT NULL ,
            TIME VARCHAR (25)  ,
            DESCRIPTION VARCHAR (255)  
) ; 
ALTER TABLE WF_TASKACCREDIT
    ADD CONSTRAINT WfTaskaccredit_PK 
    PRIMARY KEY (ID);

CREATE TABLE WF_ACCREDIT_EVENT_AUDIT (
	EVENT_AUDIT_ID varchar (40)  NOT NULL ,
	OLD_USER_NAME varchar (255) ,
	OLD_NAME varchar (255) ,
	NEW_USER_NAME varchar (255) ,
	NEW_NAME varchar (255) 
);

CREATE TABLE WF_ACTIVITY (
	ACTIVITY_ID varchar (255)  NOT NULL ,
	PROCESS_ID varchar (255) ,
	SET_DEFINITION_ID varchar (60) ,
	DEFINITION_ID varchar (60) ,
	SUB_FLOW_ID varchar (60) ,
	BLOCK_ID varchar (60) ,
	IS_ACCEPTED char (1) ,
	ACTIVITY_NAME varchar (255) ,
	DESCRIPTION varchar (255) ,
	CURRENT_STATE varchar (255) ,
	PRIORITY numeric(18, 0) ,
	CREATE_TIME timestamp  ,
	ACTIVATED_TIME timestamp  ,
	ACCEPTED_TIME timestamp  ,
	LAST_STATE_TIME timestamp  ,
	FORM_ID varchar (60) ,
	SOURCE_REFERENCE_ID varchar (60) ,
	PREVIOUS_ACTIVITY varchar (255) ,
	PREVIOUS_ACTIVITY_NAME varchar (255) ,
	PREVIOUS_RESOURCE varchar (60) ,
	PREVIOUS_RESOURCE_NAME varchar (80) 
);

CREATE TABLE WF_ACTIVITY_END (
	PROCESS_ID varchar (255) ,
	ACTIVITY_ID varchar (255)  NOT NULL ,
	SET_DEFINITION_ID varchar (60) ,
	DEFINITION_ID varchar (60) ,
	SUB_FLOW_ID varchar (60) ,
	BLOCK_ID varchar (60) ,
	CREATE_TIME timestamp  ,
	ACTIVATED_TIME timestamp  ,
	LAST_STATE_TIME timestamp  ,
	ACTIVITY_NAME varchar (255) ,
	DESCRIPTION varchar (255) ,
	PRIORITY numeric(18, 0),
	FORM_ID varchar (60) ,
	SOURCE_REFERENCE_ID varchar (60) 
);

CREATE TABLE WF_ACTIVITY_VARIABLE (
	ACTIVITY_ID varchar (255) NOT NULL ,
	DEFINITION_ID varchar (255) NOT NULL ,
	VAR_VALUE LONG RAW  ,
	IS_MODIFIED char (1) 
);

CREATE TABLE WF_AND_JOIN (
	AND_JOIN_ID varchar (40)  NOT NULL ,
	PROCESS_ID varchar (255) ,
	ACTIVITY_ID varchar (255) ,
	ACTIVITY_DEF_ID varchar (255) ,
	ACTIVITY_SET_DEF_ID varchar (255) 
);

CREATE TABLE WF_APPLICATION_MAP (
	PACKAGE_ID varchar (255)  NOT NULL ,
	PROCESS_DEF_ID varchar (255)  NOT NULL ,
	APPLICATION_DEF_ID varchar (255)  NOT NULL ,
	TOOL_AGENT_NAME varchar (255) ,
	USER_NAME varchar (255) ,
	PASSWD varchar (255) ,
	APPLICATION_NAME varchar (255) ,
	APPLICATION_MODE numeric(18, 0)  
);

CREATE TABLE WF_ASSIGNMENT (
	ACTIVITY_ID varchar (255)  NOT NULL ,
	PROCESS_ID varchar (255) ,
	USER_ID varchar (255)  NOT NULL ,
	USER_NAME varchar (255) ,
	RESOURCE_TYPE varchar (255)  NOT NULL ,
	FROM_DATE timestamp  ,
	THRU_DATE timestamp  ,
	STATUS_ID varchar (40) ,
	READ_MARK numeric(18, 0) ,
	WORK_ORDER numeric(18, 0)  ,
	OLD_USER_ID varchar (255) ,
	OLD_RESOURCE_TYPE varchar (255) 
) ;

CREATE TABLE WF_ASSIGNMENT_END (
	ACTIVITY_ID varchar (255)  NOT NULL ,
	PROCESS_ID varchar (255) ,
	USER_ID varchar (255)  NOT NULL ,
	USER_NAME varchar (255) ,
	FROM_DATE timestamp  ,
	THRU_DATE timestamp   
);

CREATE TABLE WF_ASSIGNMENT_EVENT_AUDIT (
	EVENT_AUDIT_ID varchar (40)  NOT NULL ,
	OLD_USER_NAME varchar (255) ,
	OLD_NAME varchar (255) ,
	NEW_USER_NAME varchar (255) ,
	NEW_NAME varchar (255) ,
	IS_ACCEPTED char (1),
	OLD_TYPE varchar(255) ,
	NEW_TYPE varchar(255) ,
	STATUS varchar(255)	
) ;

CREATE TABLE WF_CREATE_PROCESS_EVENT_AUDIT (
	EVENT_AUDIT_ID varchar (40)  NOT NULL ,
	P_ACTIVITY_ID varchar (255) ,
	P_ACTIVITY_DEF_ID varchar (255) ,
	P_PROCESS_ID varchar (255) ,
	P_PROCESS_NAME varchar (255) ,
	P_PROCESS_DEF_ID varchar (255) ,
	P_PROCESS_DEF_NAME varchar (255) ,
	P_PROCESS_DEF_VER varchar (255) ,
	P_PACKAGE_ID varchar (255) ,
	P_ACTIVITY_SET_DEFINITION_ID varchar (255)
);

CREATE TABLE WF_DATA_EVENT_AUDIT (
	EVENT_AUDIT_ID varchar (40)  NOT NULL ,
	OLD_DATA VARCHAR(255)  ,
	NEW_DATA VARCHAR(255) 
);

CREATE TABLE WF_DEADLINE (
	DEADLINE_ID varchar (40)  NOT NULL ,
	PROCESS_ID varchar (255) ,
	ACTIVITY_ID varchar (255) ,
	EXCEPTION_NAME varchar (255) ,
	TIME_LIMIT numeric(18, 0)  ,
	IS_SYNC char (1)  
);

CREATE TABLE WF_EVENT_AUDIT (
	EVENT_AUDIT_ID varchar (40)  NOT NULL ,
	AUDIT_TIME varchar (255) ,
	AUDIT_TYPE varchar (255) ,
	PACKAGE_ID varchar (255) ,
	PROCESS_ID varchar (255) ,
	PROCESS_NAME varchar (255) ,
	PROCESS_DEF_ID varchar (255) ,
	PROCESS_DEF_NAME varchar (255) ,
	PROCESS_DEF_VER varchar (255) ,
	ACTIVITY_ID varchar (255) ,
	ACTIVITY_NAME varchar (255) ,
	ACTIVITY_DEF_ID varchar (255) ,
	ACTIVITY_SET_DEFINITION_ID varchar (255) 
);

CREATE TABLE WF_PARTICIPANT_MAP (
	PARTICIPANT_MAP_ID varchar (40)  NOT NULL ,
	PACKAGE_ID varchar (255) ,
	PROCESS_DEF_ID varchar (255) ,
	PARTICIPANT_ID varchar (255) ,
	USER_NAME varchar (255) ,
	IS_GROUP_USER char (1) 
);

CREATE TABLE WF_PROCESS (
	PROCESS_ID varchar (255)  NOT NULL ,
	PROCESS_TYPE varchar (255) ,
	PROCESS_RESERVE_TYPE_ID varchar (255) ,
	DEFINITION_ID varchar (60) ,
	MGR_NAME varchar (255) ,
	ACTIVITY_REQ_PROCESS_ID varchar (60) ,
	ACTIVITY_REQ_ID varchar (60) ,
	RESOURCE_REQ_ID varchar (60) ,
	RESOURCE_REQ_NAME varchar (60) ,
	PROCESS_NAME varchar (255) ,
	DESCRIPTION varchar (255) ,
	CURRENT_STATE varchar (255) ,
	PRIORITY numeric(18, 0)  ,
	STARTED_TIME timestamp  ,
	LAST_STATE_TIME timestamp,
	RESOURCE_REQ_ORG varchar(255)  
);

CREATE TABLE WF_PROCESS_END (
	PROCESS_ID varchar (255)  NOT NULL ,
	PROCESS_TYPE varchar (255) ,
	PROCESS_RESERVE_TYPE_ID varchar (255) ,
	DEFINITION_ID varchar (60) ,
	MGR_NAME varchar (255) ,
	ACTIVITY_REQ_PROCESS_ID varchar (60) ,
	ACTIVITY_REQ_ID varchar (60) ,
	RESOURCE_REQ_ID varchar (60) ,
	RESOURCE_REQ_NAME varchar (60) ,
	PROCESS_NAME varchar (255) ,
	DESCRIPTION varchar (255) ,
	CURRENT_STATE varchar (255) ,
	PRIORITY numeric(18, 0)  ,
	STARTED_TIME timestamp  ,
	LAST_STATE_TIME timestamp  ,
	FORM_ID varchar (60) ,
	SOURCE_REFERENCE_ID varchar (60),
	ORG_ID varchar(255) 
);

CREATE TABLE WF_PROCESS_MGR (
	MGR_NAME varchar (255)  NOT NULL ,
	PACKAGE_ID varchar (60) ,
	DEFINITION_ID varchar (60) ,
	PROCESS_NAME varchar (255) ,
	PROCESS_TYPE varchar (255) ,
	PROC_VERSION varchar (255) ,
	CREATED varchar (255) ,
	CURRENT_STATE numeric(18, 0)   
);

CREATE TABLE WF_PROCESS_VARIABLE (
	PROCESS_ID varchar (255)  NOT NULL  ,
	DEFINITION_ID varchar (255)  NOT NULL  ,
	VAR_VALUE LONG RAW   
);

CREATE TABLE WF_REPOSITORY (
	XPDL_ID varchar (40)  NOT NULL ,
	XPDL_VERSION varchar (255)  NOT NULL ,
	XPDL_NAME varchar (255)  NOT NULL ,
	XPDL_DATA LONG RAW  ,
	IS_HISTORICAL char (1) 
);

CREATE TABLE WF_REPOSITORY_REF (
	XPDL_ID varchar (40)  NOT NULL ,
	XPDL_VERSION varchar (255)  NOT NULL ,
	REF_XPDL_ID varchar (40)  NOT NULL
);

CREATE TABLE WF_REQUESTER (
	REQUESTER_ID varchar (40)  NOT NULL ,
	PROCESS_ID varchar (255)  NOT NULL ,
	FROM_DATE timestamp NOT NULL ,
	THRU_DATE timestamp  ,
	CLASS_NAME varchar (255) ,
	CLASS_DATA varchar (2000) 
);

CREATE TABLE WF_RESOURCE (
	USER_NAME varchar (255)  NOT NULL ,
	RESOURCE_NAME varchar (255) 
);

CREATE TABLE WF_RESPONSIBLES (
	PROCESS_ID varchar (255)  NOT NULL ,
	USER_ID varchar (255)  NOT NULL ,
	USER_TYPE varchar (255)  NOT NULL ,
	ACTIVITY_ID varchar (255) ,
	CREATE_DATE timestamp   
);

CREATE TABLE WF_STATE_EVENT_AUDIT (
	EVENT_AUDIT_ID varchar (40)  NOT NULL ,
	OLD_STATE varchar (255) ,
	NEW_STATE varchar (255)  
) ;

CREATE TABLE WF_OPERATION (
	OPERATION_TYPE varchar (50) NOT NULL ,
	OPERATION_ID varchar (255) NOT NULL ,
	PROCESS_ID varchar (255) NOT NULL 
);
CREATE TABLE WF_MAPPING (
	MAPPING_ID varchar(40) NOT NULL,
	PROCESS_ID varchar (255),
	ACTIVITY_ID varchar (255)
);
CREATE TABLE WF_MANAGE_CONFIGS (
	CONFIG_NAME varchar(255) NOT NULL,
	CONFIG_CONTENT LONG RAW
);
CREATE TABLE WF_MANAGE_FILES (
	PROCESS_TYPE varchar(255) NOT NULL,
	FILE_NAME varchar(255) NOT NULL,
	FILE_CONTENT LONG RAW
);
CREATE TABLE WF_ACTIVITY_EVENT_AUDIT (
    EVENT_AUDIT_ID varchar(50) NOT NULL ,
	ACTIVITY_ID varchar(255),
	PRE_ACTIVITY_ID varchar(255),
	PRE_RES_KEY varchar(255) 
);
ALTER TABLE WF_ACTIVITY_EVENT_AUDIT 
       ADD CONSTRAINT WfActivityEA_PK
       PRIMARY KEY(EVENT_AUDIT_ID);
--新建任务权限表
CREATE TABLE WF_DATAREF (ORGAN_ID varchar (50) NOT NULL ,RES_ID varchar (255) NOT NULL ,RES_TYPE varchar (255) NOT NULL);

ALTER TABLE WF_MAPPING
    ADD CONSTRAINT WfMapping_PK 
    PRIMARY KEY (MAPPING_ID);
ALTER TABLE WF_OPERATION
    ADD CONSTRAINT WfOperation_PK 
    PRIMARY KEY (OPERATION_TYPE,OPERATION_ID);

ALTER TABLE WF_ACCREDIT_EVENT_AUDIT
    ADD CONSTRAINT WfAccreditEA_PK 
    PRIMARY KEY (EVENT_AUDIT_ID);
ALTER TABLE WF_ACTIVITY
    ADD CONSTRAINT WfActivity_PK 
    PRIMARY KEY (ACTIVITY_ID);
ALTER TABLE WF_ACTIVITY_END
    ADD CONSTRAINT WfActivityEnd_PK 
    PRIMARY KEY (ACTIVITY_ID); 
ALTER TABLE WF_ACTIVITY_VARIABLE
    ADD CONSTRAINT WfActivityVar_PK 
    PRIMARY KEY (ACTIVITY_ID,DEFINITION_ID); 
ALTER TABLE WF_AND_JOIN
    ADD CONSTRAINT WfAndJoin_PK 
    PRIMARY KEY (AND_JOIN_ID);
ALTER TABLE WF_APPLICATION_MAP
    ADD CONSTRAINT WfAppMap_PK 
    PRIMARY KEY (PACKAGE_ID,PROCESS_DEF_ID,APPLICATION_DEF_ID);   
ALTER TABLE WF_ASSIGNMENT
    ADD CONSTRAINT WfAssignment_PK 
    PRIMARY KEY (ACTIVITY_ID,USER_ID,RESOURCE_TYPE);    
ALTER TABLE WF_ASSIGNMENT_END
    ADD CONSTRAINT WfAssignmentEnd_PK 
    PRIMARY KEY (ACTIVITY_ID,USER_ID); 
ALTER TABLE WF_ASSIGNMENT_EVENT_AUDIT
    ADD CONSTRAINT WfAssignmentEA_PK 
    PRIMARY KEY (EVENT_AUDIT_ID);  
ALTER TABLE WF_CREATE_PROCESS_EVENT_AUDIT
    ADD CONSTRAINT WfCreateProEA_PK 
    PRIMARY KEY (EVENT_AUDIT_ID);  
ALTER TABLE WF_DATA_EVENT_AUDIT
    ADD CONSTRAINT WfDataEA_PK 
    PRIMARY KEY (EVENT_AUDIT_ID);            
ALTER TABLE WF_DEADLINE
    ADD CONSTRAINT WfDeadline_PK 
    PRIMARY KEY (DEADLINE_ID); 
ALTER TABLE WF_EVENT_AUDIT
    ADD CONSTRAINT WfEventAudit_PK 
    PRIMARY KEY (EVENT_AUDIT_ID); 
ALTER TABLE WF_PARTICIPANT_MAP
    ADD CONSTRAINT WfPartMap_PK 
    PRIMARY KEY (PARTICIPANT_MAP_ID); 
ALTER TABLE WF_PROCESS
    ADD CONSTRAINT WfProcess_PK 
    PRIMARY KEY (PROCESS_ID);
ALTER TABLE WF_PROCESS_END
    ADD CONSTRAINT WfProcessEnd_PK 
    PRIMARY KEY (PROCESS_ID);  
ALTER TABLE WF_PROCESS_MGR
    ADD CONSTRAINT WfMgrName_PK 
    PRIMARY KEY (MGR_NAME);
ALTER TABLE WF_PROCESS_VARIABLE
    ADD CONSTRAINT WfProcessVar_PK 
    PRIMARY KEY (PROCESS_ID,DEFINITION_ID);  
ALTER TABLE WF_REPOSITORY
    ADD CONSTRAINT WfRepository_PK 
    PRIMARY KEY (XPDL_ID,XPDL_VERSION);
ALTER TABLE WF_REPOSITORY_REF
    ADD CONSTRAINT WfRepositoryRef_PK 
    PRIMARY KEY (XPDL_ID,XPDL_VERSION,REF_XPDL_ID);
ALTER TABLE WF_REQUESTER
    ADD CONSTRAINT WfRequester_PK 
    PRIMARY KEY (REQUESTER_ID,PROCESS_ID,FROM_DATE); 
ALTER TABLE WF_RESOURCE
    ADD CONSTRAINT WfResource_PK 
    PRIMARY KEY (USER_NAME);     
ALTER TABLE WF_RESPONSIBLES
    ADD CONSTRAINT WfRespons_PK 
    PRIMARY KEY (PROCESS_ID,USER_ID,USER_TYPE);     
ALTER TABLE WF_DATAREF ADD CONSTRAINT WfDataRef_PK PRIMARY KEY (ORGAN_ID,RES_ID,RES_TYPE);   
    
CREATE VIEW WF_TASK_LIST 
AS SELECT 
WF_PROCESS.PROCESS_ID,
WF_PROCESS.RESOURCE_REQ_ID,
WF_PROCESS.PROCESS_NAME,
WF_PROCESS.RESOURCE_REQ_NAME,
WF_PROCESS.PROCESS_TYPE,
WF_PROCESS.PROCESS_RESERVE_TYPE_ID,
WF_PROCESS.MGR_NAME,
WF_PROCESS.DEFINITION_ID AS PRO_DEFINITION_ID,
WF_PROCESS.DESCRIPTION AS PRO_DESCRIPTION,
WF_PROCESS.CURRENT_STATE AS PRO_CURRENT_STATE,
WF_PROCESS.STARTED_TIME AS PRO_STARTED_TIME,
WF_ACTIVITY.ACTIVITY_ID,
WF_PROCESS.PRIORITY,
WF_ACTIVITY.DEFINITION_ID AS ACT_DEFINITION_ID,
WF_ACTIVITY.CURRENT_STATE AS ACT_CURRENT_STATE,
WF_ACTIVITY.ACTIVITY_NAME,
WF_ACTIVITY.FORM_ID,
WF_ACTIVITY.SOURCE_REFERENCE_ID,
WF_ACTIVITY.CREATE_TIME,
WF_ACTIVITY.PREVIOUS_ACTIVITY,
WF_ACTIVITY.PREVIOUS_ACTIVITY_NAME,
WF_ACTIVITY.PREVIOUS_RESOURCE,
WF_ACTIVITY.PREVIOUS_RESOURCE_NAME,
WF_ASSIGNMENT.USER_ID,
WF_ASSIGNMENT.USER_NAME,
WF_ASSIGNMENT.RESOURCE_TYPE,
WF_ASSIGNMENT.FROM_DATE,
WF_ASSIGNMENT.STATUS_ID,
WF_ASSIGNMENT.THRU_DATE,
WF_ASSIGNMENT.WORK_ORDER,
WF_ASSIGNMENT.READ_MARK 
FROM WF_PROCESS,WF_ACTIVITY,WF_ASSIGNMENT
WHERE WF_PROCESS.PROCESS_ID=WF_ACTIVITY.PROCESS_ID 
AND WF_ACTIVITY.ACTIVITY_ID=WF_ASSIGNMENT.ACTIVITY_ID;

CREATE VIEW WF_ACT_LIST 
AS SELECT 
WF_PROCESS.PROCESS_ID,
WF_PROCESS.RESOURCE_REQ_ID,
WF_PROCESS.PROCESS_NAME,
WF_PROCESS.RESOURCE_REQ_NAME,
WF_PROCESS.PROCESS_TYPE,
WF_PROCESS.PROCESS_RESERVE_TYPE_ID,
WF_PROCESS.DEFINITION_ID AS PRO_DEFINITION_ID,
WF_PROCESS.DESCRIPTION AS PRO_DESCRIPTION,
WF_PROCESS.CURRENT_STATE AS PRO_CURRENT_STATE,
WF_PROCESS.STARTED_TIME AS PRO_STARTED_TIME,
WF_PROCESS.MGR_NAME,
WF_ACTIVITY.ACTIVITY_ID,
WF_PROCESS.PRIORITY,
WF_ACTIVITY.DEFINITION_ID AS ACT_DEFINITION_ID,
WF_ACTIVITY.CURRENT_STATE AS ACT_CURRENT_STATE,
WF_ACTIVITY.ACTIVITY_NAME,
WF_ACTIVITY.FORM_ID,
WF_ACTIVITY.SOURCE_REFERENCE_ID,
WF_ACTIVITY.PREVIOUS_ACTIVITY,
WF_ACTIVITY.CREATE_TIME,
WF_ACTIVITY.PREVIOUS_ACTIVITY_NAME,
WF_ACTIVITY.PREVIOUS_RESOURCE,
WF_ACTIVITY.PREVIOUS_RESOURCE_NAME,
WF_RESPONSIBLES.USER_ID,
WF_RESPONSIBLES.USER_TYPE,
WF_ASSIGNMENT.USER_ID AS CUR_USER_ID, 
WF_ASSIGNMENT.USER_NAME AS CUR_USER_NAME, 
WF_ASSIGNMENT.RESOURCE_TYPE,
WF_ASSIGNMENT.FROM_DATE,
WF_ASSIGNMENT.STATUS_ID,
WF_ASSIGNMENT.READ_MARK,
WF_ASSIGNMENT.WORK_ORDER
FROM WF_PROCESS,WF_ACTIVITY,WF_RESPONSIBLES,WF_ASSIGNMENT 
WHERE WF_PROCESS.PROCESS_ID=WF_ACTIVITY.PROCESS_ID 
AND WF_PROCESS.PROCESS_ID=WF_RESPONSIBLES.PROCESS_ID
AND WF_ACTIVITY.PROCESS_ID=WF_ASSIGNMENT.PROCESS_ID
AND WF_ACTIVITY.ACTIVITY_ID=WF_ASSIGNMENT.ACTIVITY_ID;  
           
CREATE VIEW WF_END_TASK_LIST 
AS SELECT 
WF_PROCESS_END.PROCESS_ID,
WF_PROCESS_END.RESOURCE_REQ_ID,
WF_PROCESS_END.PROCESS_NAME,
WF_PROCESS_END.RESOURCE_REQ_NAME,
WF_PROCESS_END.PROCESS_TYPE,
WF_PROCESS_END.PROCESS_RESERVE_TYPE_ID,
WF_PROCESS_END.DEFINITION_ID AS PRO_DEFINITION_ID,
WF_PROCESS_END.DESCRIPTION AS PRO_DESCRIPTION,
WF_PROCESS_END.CURRENT_STATE AS PRO_CURRENT_STATE,
WF_PROCESS_END.STARTED_TIME AS PRO_STARTED_TIME,
WF_PROCESS_END.LAST_STATE_TIME,
WF_PROCESS_END.ORG_ID,
WF_PROCESS_END.MGR_NAME,
WF_ACTIVITY_END.ACTIVITY_ID,
WF_ACTIVITY_END.DEFINITION_ID AS ACT_DEFINITION_ID,
WF_ACTIVITY_END.ACTIVITY_NAME,
WF_ACTIVITY_END.FORM_ID,
WF_ACTIVITY_END.SOURCE_REFERENCE_ID,
WF_ACTIVITY_END.CREATE_TIME,
WF_PROCESS_END.PRIORITY,
WF_ASSIGNMENT_END.USER_ID,
WF_ASSIGNMENT_END.USER_NAME,
WF_ASSIGNMENT_END.FROM_DATE,
WF_ASSIGNMENT_END.THRU_DATE
FROM WF_PROCESS_END,WF_ACTIVITY_END,WF_ASSIGNMENT_END
WHERE WF_PROCESS_END.PROCESS_ID=WF_ACTIVITY_END.PROCESS_ID 
AND WF_ACTIVITY_END.ACTIVITY_ID=WF_ASSIGNMENT_END.ACTIVITY_ID;

CREATE VIEW WF_ASS_EVENT_LIST AS SELECT 
WF_EVENT_AUDIT.EVENT_AUDIT_ID,
WF_EVENT_AUDIT.AUDIT_TIME,
WF_EVENT_AUDIT.AUDIT_TYPE,
WF_EVENT_AUDIT.PACKAGE_ID,
WF_EVENT_AUDIT.PROCESS_ID,
WF_EVENT_AUDIT.PROCESS_NAME,
WF_EVENT_AUDIT.PROCESS_DEF_ID,
WF_ASSIGNMENT_EVENT_AUDIT.OLD_USER_NAME,
WF_ASSIGNMENT_EVENT_AUDIT.OLD_NAME,
WF_ASSIGNMENT_EVENT_AUDIT.OLD_TYPE,
WF_ASSIGNMENT_EVENT_AUDIT.NEW_USER_NAME,
WF_ASSIGNMENT_EVENT_AUDIT.NEW_NAME,
WF_ASSIGNMENT_EVENT_AUDIT.NEW_TYPE,
WF_ASSIGNMENT_EVENT_AUDIT.IS_ACCEPTED 
FROM WF_EVENT_AUDIT,WF_ASSIGNMENT_EVENT_AUDIT 
WHERE WF_EVENT_AUDIT.EVENT_AUDIT_ID=WF_ASSIGNMENT_EVENT_AUDIT.EVENT_AUDIT_ID;
--20070808  添加视图
CREATE VIEW WF_PARTICIPANT_LIST AS SELECT 
P.PROCESS_ID,
P.PROCESS_RESERVE_TYPE_ID,
P.DEFINITION_ID AS PRO_DEFINITION_ID,
P.PROCESS_NAME,
P.CURRENT_STATE AS PRO_CURRENT_STATE,
P.STARTED_TIME AS PRO_STARTED_TIME,
P.PROCESS_TYPE,
A.ACTIVITY_ID,
A.ACTIVITY_NAME,
A.DEFINITION_ID AS ACT_DEFINITION_ID, 
A.SOURCE_REFERENCE_ID,
A.PREVIOUS_ACTIVITY,
A.PREVIOUS_ACTIVITY_NAME,
A.CURRENT_STATE AS ACT_CURRENT_STATE,
A.PREVIOUS_RESOURCE_NAME,
A.FORM_ID,
A.CREATE_TIME,
B.READ_MARK,
B.RESOURCE_TYPE,
D.NEW_USER_NAME AS USER_ID,
D.NEW_NAME AS USER_NAME,
D.NEW_TYPE AS OLD_RESOURCE_TYPE,
B.FROM_DATE,
B.USER_ID AS CUR_USER_ID,
B.USER_NAME AS CUR_USER_NAME
FROM WF_PROCESS P,WF_ACTIVITY A ,WF_ASSIGNMENT B,WF_EVENT_AUDIT C ,WF_ASSIGNMENT_EVENT_AUDIT D 
WHERE P.PROCESS_ID=A.PROCESS_ID AND A.CURRENT_STATE='open.running' AND  A.PREVIOUS_ACTIVITY=C.ACTIVITY_DEF_ID 
AND A.PROCESS_ID=C.PROCESS_ID AND C.AUDIT_TYPE='activityAssignmentChanged' AND C.EVENT_AUDIT_ID=D.EVENT_AUDIT_ID 
AND D.STATUS='TASK_ACCEPTED' AND A.ACTIVITY_ID=B.ACTIVITY_ID;

--流程类型
CREATE TABLE WF_PROCESS_TYPE
(
                TYPE_ID VARCHAR (36) NOT NULL ,
                NAME VARCHAR (80) NOT NULL ,
                ORGAN_ID VARCHAR (40) NOT NULL ,
                ORGAN_NAME VARCHAR (100) NOT NULL ,
                ISALLSUB CHAR (1) NOT NULL ,
                SORTNUM INT ,
                DESCRIPTION VARCHAR (300) ,
                NOTE VARCHAR (30) ,
                NOTE2 VARCHAR (30) ,
                NOTE3 VARCHAR (30) 
);
ALTER TABLE WF_PROCESS_TYPE
    ADD CONSTRAINT WfProcessType_PK 
    PRIMARY KEY (TYPE_ID);

--流程文件列表
CREATE TABLE WF_PROCESS_FILES
(
                PROCESS_ID VARCHAR (36) NOT NULL ,
                NAME VARCHAR (100) NOT NULL ,
                TYPE_ID VARCHAR (36) NOT NULL ,
                TYPE_NAME VARCHAR (80) NOT NULL ,
                ORGAN_ID VARCHAR (40) NOT NULL ,
                ORGAN_NAME VARCHAR (100) NOT NULL ,
                ISALLSUB CHAR (1) NOT NULL ,
                FORMID VARCHAR (40) ,
                FORMNAME VARCHAR (100) ,
                RESERVETYPE VARCHAR (40) ,
                AUTHPR VARCHAR (80) ,
                CREATE_TIME VARCHAR (20) ,
                SAVEIMPORT VARCHAR (10) ,
                VERSIONID VARCHAR (30) ,
                ISTEMPLET INT ,
                DESCRIPTION VARCHAR (300) ,
                NOTE VARCHAR (30) ,
                NOTE2 VARCHAR (30) ,
                NOTE3 VARCHAR (30) 
);
ALTER TABLE WF_PROCESS_FILES
    ADD CONSTRAINT WfProcessFiles_PK 
    PRIMARY KEY (PROCESS_ID);

CREATE  INDEX TYPE_ID ON WF_PROCESS_FILES (TYPE_ID);

