<html>

<head>
<meta http-equiv="Content-Language" content="zh-cn">
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>New Page 4</title>
<script language="javascript">
var firstXml;//包含帧的节点
var downMark="false";
var bottomMark="false"
var begY=0;//鼠标按下时的纵轴值
var endY=0;//鼠标弹起时的纵轴值
var tempCount=0;
var tempMaxCount=0;
var moveY=0;
var befNode;
var aftNode;
var mainok="false"

//初始化页面,将帧的xml文件载入
function init()
{
	var myXml=new ActiveXObject("Msxml.DOMDocument");
	myXml.async = false ;
	myXml.load("frame.xml");
	firstXml=myXml.childNodes[1];
	//alert(firstXml.xml)
}
//最小化右面帧的窗口
function btnMin(nodeId,thisNode)
{
	//alert(document.getElementById(nodeId).parentNode.innerHTML)
	document.selection.empty();
	document.getElementById(nodeId).style.display="none"
	thisNode.style.display="none"
	thisNode.nextSibling.style.display="inline"
	var tempHei=0;
	var tempObj=document.body.getElementsByTagName("iframe");
	var tempTot=0;
	//得到将要关闭的帧的高度
	
	tempHei=parseFloat(document.getElementById(nodeId).style.height);
	
	
	var uu=0;
	var tempu=0;
	//遍历窗体中未关闭的iframe元素
	for(var i=0;i<tempObj.length;i++)
	{
		if(tempObj[i].style.display!="none")
		{
			
			tempTot+=parseFloat(tempObj[i].style.height);
			uu=i;
			//alert(document.getElementById(frmId).style.display+"--"+tempTot)
		}
		
	}
	tempu=tempTot+tempHei;
	//给窗体中没关闭的帧重赋高度
	for(var h=0;h<tempObj.length;h++)
	{
		if(tempObj[h].style.display!="none")
		{
			var tempEvr=0;
			tempEvr=tempHei*parseFloat(tempObj[h].style.height)/tempTot+parseFloat(tempObj[h].style.height);
			//如果是最后一个显示的帧,其值用总的帧的高度减已经显示的帧的高度表示
			if(h==uu)
			{
				tempObj[h].style.height=tempu;
			}
			else
			{
				tempObj[h].style.height=tempEvr;
				tempu=tempu-parseFloat(tempObj[h].style.height);
			}
		}
	}
	
	//unselet()
}
//最大化右面帧的窗口
function btnMax(nodeId,thisNode)
{
	document.selection.empty();
	
	thisNode.style.display="none"
	thisNode.previousSibling.style.display="inline"
	var tempHei=0;
	var tempObj=document.body.getElementsByTagName("iframe");
	var tempTot=0;
	//得到将要显示的帧的高度
	
	tempHei=parseFloat(document.getElementById(nodeId).style.height);
	
	
	tempTot=document.body.clientHeight
	for(var h=0;h<firstXml.childNodes.length;h++)
	{
		if(firstXml.childNodes[h].getAttribute("position")=="right" && firstXml.childNodes[h].getAttribute("state")=="open")
		{
			tempTot=tempTot-24
		}
	}
	var uu;
	//遍历窗体中未关闭的iframe元素
	for(var i=0;i<tempObj.length;i++)
	{
		if(tempObj[i].style.display!="none")
		{
			
			//tempTot+=parseFloat(tempObj[i].style.height);
			uu=i
		}
		
	}
	//alert(tempHei)
	var tempu=0;
	var allopen="no"
	//给窗体中没关闭的帧重赋高度
	if(tempHei>400)
	{
		tempHei=400;
		document.getElementById(nodeId).style.height=400
	}
	tempu=tempTot-tempHei;
	for(var h=0;h<tempObj.length;h++)
	{
		if(tempObj[h].style.display!="none")
		{
			allopen="yes"
			var tempEvr=0;
			tempEvr=parseFloat(tempObj[h].style.height)-tempHei*parseFloat(tempObj[h].style.height)/tempTot;
			if(tempEvr<0)
			{
				tempEvr=0;
			}
			//如果是最后一个显示的帧,其值用总的帧的高度减已经显示的帧的高度表示
			if(uu==h)
			{
				//alert(tempObj[0].style.height+"-ttt-"+tempu)
				if(tempu<0)
				{
					tempu=0
				}
				tempObj[h].style.height=tempu;
			}
			else
			{				
				tempObj[h].style.height=tempEvr.toString();				
				tempu=tempu-parseFloat(tempObj[h].style.height);
				//alert(tempObj[h].style.height)
			}
					
		}
	}
	if(allopen=="no")
	{
		document.getElementById(nodeId).style.height=tempTot;
	}
	document.getElementById(nodeId).style.display="block"

}
//帧的关闭按钮
function btnclose(nodeId,frmId,id)
{
	document.selection.empty();	
	document.getElementById(nodeId).parentNode.style.display="none"	
	document.getElementById(nodeId).parentNode.previousSibling.style.display="none"
	var tempHei=0;
	var tempObj=document.body.getElementsByTagName("iframe");
	var tempTot=0;
	//得到将要关闭的帧的高度
	if(document.getElementById(frmId).style.display!="none")
	{
		tempHei=parseFloat(document.getElementById(frmId).style.height)+24+2;
	}
	else
	{
		tempHei=24+2;
	}
	document.getElementById(frmId).style.display="none"	
	
	//遍历窗体中未关闭的iframe元素
	for(var i=0;i<tempObj.length;i++)
	{
		if(tempObj[i].style.display!="none")
		{
			
			tempTot+=parseFloat(tempObj[i].style.height);
			//alert(document.getElementById(frmId).style.display+"--"+tempTot)
		}
		
	}
	//给窗体中没关闭的帧重赋高度
	for(var h=0;h<tempObj.length;h++)
	{
		if(tempObj[h].style.display!="none")
		{
			var tempEvr=0;
			tempEvr=tempHei*parseFloat(tempObj[h].style.height)/tempTot+parseFloat(tempObj[h].style.height);
			tempObj[h].style.height=tempEvr;
		}
	}

}
//在右栏鼠标拖动时按下动作
function mvDown()
{
	//alert((event.y+55))
	downMark="true"
	top.document.all("draghr").style.display="block"
	top.document.all("draghr").style.top=event.y+55
	
}
//在右栏鼠标拖动时弹起动作
function mvUp(tempY)
{
	//alert("up"+tempY+"--"+downMark)
	//顶部的鼠标拖动
	var isMax="";
	top.document.all("draghr").style.display="none";
	for(var h=0;h<firstXml.childNodes.length;h++)
	{
		if(firstXml.childNodes[h].getAttribute("position")=="right")
		{
			if(firstXml.childNodes[h].getAttribute("type")=="main" && firstXml.childNodes[h].getAttribute("size")=="max")
			{	
					isMax="true"
			}	
			if(firstXml.childNodes[h].getAttribute("type")=="main" && firstXml.childNodes[h].getAttribute("size")=="min")
			{
				isMax="false"
			}
		}
	}
	if(downMark=="true" && isMax=="true")
	{
		
		endY=tempY;
		//当鼠标向上拖动
		if(begY>endY)
		{
			distance=begY-endY;
			//alert(distance+"--"+tempMaxCount)
			for(var h=0;h<firstXml.childNodes.length;h++)
			{
				if(firstXml.childNodes[h].getAttribute("position")=="right")
				{
					if(firstXml.childNodes[h].getAttribute("type")!="main" && firstXml.childNodes[h].getAttribute("size")=="max")
					{	
						var temptance=0;
						temptance=distance+parseFloat(firstXml.childNodes[h].getAttribute("height"))
						firstXml.childNodes[h].setAttribute("height",temptance);
					}					
				}
			}

		}
		else//鼠标向下拖动
		{
			distance=(endY-begY)/(tempMaxCount)
			for(var h=0;h<firstXml.childNodes.length;h++)
			{
				if(firstXml.childNodes[h].getAttribute("position")=="right")
				{
					if(firstXml.childNodes[h].getAttribute("type")!="main" && firstXml.childNodes[h].getAttribute("size")=="max")
					{	
						var temptance=0;
						//如果拖动距离大于单个帧的高度,帧的最小高度为零
						//alert(distance+"--"+(endY-begY)+"--"+tempCount)
						if(distance>parseFloat(firstXml.childNodes[h].getAttribute("height")))
						{
							temptance=0
						}
						else
						{
							temptance=parseFloat(firstXml.childNodes[h].getAttribute("height"))-distance
						}
						firstXml.childNodes[h].setAttribute("height",temptance);
					}					
				}
			}

		}
		showFrame();
		downMark="false"
	}
	//底部的鼠标拖动
	if(bottomMark=="true" && isMax=="false")
	{
		
		endY=tempY;
		//当鼠标向下拖动
		if(begY<endY)
		{
			distance=(endY-begY)/(tempMaxCount);
			//alert(distance+"--"+tempMaxCount)
			for(var h=0;h<firstXml.childNodes.length;h++)
			{
				if(firstXml.childNodes[h].getAttribute("position")=="right")
				{
					if(firstXml.childNodes[h].getAttribute("type")!="main" && firstXml.childNodes[h].getAttribute("size")=="max")
					{	
						var temptance=0;
						temptance=distance+parseFloat(firstXml.childNodes[h].getAttribute("height"))
						firstXml.childNodes[h].setAttribute("height",temptance);
					}					
				}
			}

		}
		else//鼠标向上拖动
		{
			distance=(begY-endY)/(tempMaxCount)
			for(var h=0;h<firstXml.childNodes.length;h++)
			{
				if(firstXml.childNodes[h].getAttribute("position")=="right")
				{
					if(firstXml.childNodes[h].getAttribute("type")!="main" && firstXml.childNodes[h].getAttribute("size")=="max")
					{	
						var temptance=0;
						//如果拖动距离大于单个帧的高度,帧的最小高度为零
						//alert(distance+"--"+(endY-begY)+"--"+tempCount)
						if(distance>parseFloat(firstXml.childNodes[h].getAttribute("height")))
						{
							temptance=0
						}
						else
						{
							temptance=parseFloat(firstXml.childNodes[h].getAttribute("height"))-distance
						}
						firstXml.childNodes[h].setAttribute("height",temptance);
					}					
				}
			}

		}
		showFrame();
		
	}
	bottomMark="false"
	downMark="false"
	
}

//在右栏鼠标拖动时按下动作
function mvBottomDown()
{
	//alert("down"+event.srcElement.tagName)
	bottomMark="true"
	begY=event.y;

}

//在右栏鼠标拖动时拖动动作
function mvMove(tempY)
{
	if(downMark=="true")
	{
		document.all("draghr").style.top=tempY;
		document.all("draghr").style.display="block";
		//alert(document.all("draghr").style.top)
	}
}
//显示页面
function showFrame()
{
	var tempCont="";
	var tempMain="";
	var tempCont2="";   
	//tempCount=''
	tempCont='<TABLE style="width:100%;border-spacing:0;border-collapse:collapse" cellpadding=0 cellspacing=0>';
	//计算右栏帧的数目
	var tempNum=0;
	
	var tempNext=0;
	var tempValue=0;
	tempMaxCount=0
	tempCount=0;
	for(var h=0;h<firstXml.childNodes.length;h++)
	{
		if(firstXml.childNodes[h].getAttribute("position")=="right" && firstXml.childNodes[h].getAttribute("state")=="open")
		{
			if(firstXml.childNodes[h].getAttribute("type")!="main" && firstXml.childNodes[h].getAttribute("size")=="max")
			{
				
				tempNum+=parseFloat(firstXml.childNodes[h].getAttribute("height"));
				tempMaxCount++;
			}
			tempCount++;
		}
	}
	//如果鼠标拖动的高度超过屏幕高度,将main帧的窗口高度设为零,其他窗口按比例缩减超过的高度
	if((tempNum+22*tempCount)>document.body.clientHeight)
	{
		tempValue=document.body.clientHeight
		for(var g=0;g<firstXml.childNodes.length;g++)
		{
			if(firstXml.childNodes[g].getAttribute("position")=="right" && firstXml.childNodes[g].getAttribute("state")=="open")
			{
				if(firstXml.childNodes[g].getAttribute("type")!="main" && firstXml.childNodes[g].getAttribute("size")=="max")
				{
					var tempH=(parseFloat(firstXml.childNodes[g].getAttribute("height"))/tempNum)*(document.body.clientHeight-22*tempCount)
					firstXml.childNodes[g].setAttribute("height",tempH);
				}
			}
		}
	}
	else
	{
		tempValue=tempNum+22*tempCount+2*(tempCount-1);
	}
	//得到窗体内容
	for(var i=0;i<firstXml.childNodes.length;i++)
	{		
		if(firstXml.childNodes[i].getAttribute("position")=="right")
		{
			//如果帧是主工作区,则加到页面的最上方
			if(firstXml.childNodes[i].getAttribute("type")=="main")
			{
				//alert(firstXml.childNodes[i].getAttribute("icon"))
				tempMain+='<tr><td id="td'+firstXml.childNodes[i].getAttribute("id")+'"><table style="width:100%;border:1 outset; '
				//判断帧是否为打开状态
				if(firstXml.childNodes[i].getAttribute("state")=="open")
				{
					tempMain+='display:block';
				}
				else
				{
					tempMain+='display:none'
				}
				tempMain+='" cellspacing=0 cellpadding=0><tr><td style="font-size:9pt;padding-left:5;background:#d4d4dc;background-image:url(images/db.gif);background-repeat:repeat-y"><table cellspacing=0 cellpadding=0 border=0><tr><td><img src="'+firstXml.childNodes[i].getAttribute("icon")+'"></td><td style="font-size:9pt;padding-left:5;font-weight:bold">'+firstXml.childNodes[i].getAttribute("title")+'</td></tr></table></td><td align="right" style="font-family:webdings;font-size:9pt;">';
				//如果帧为可以调节窗口大小
				if(firstXml.childNodes[i].getAttribute("resize")=="true")
				{
					//当帧为显示状态时,大小状态为最小化,反之,大小状态为最大化
					if(firstXml.childNodes[i].getAttribute("size")=="min")
					{
						tempMain+='<div style="display:none;cursor:hand" onclick=btnMin("frm'+firstXml.childNodes[i].getAttribute("id")+'",this) title="最小化" >0</div><div style="display:inline;cursor:hand" onclick=btnMax("frm'+firstXml.childNodes[i].getAttribute("id")+'",this) title="最大化" >1</div>'
					}
					else
					{
						tempMain+='<div style="display:inline;cursor:hand" onclick=btnMin("frm'+firstXml.childNodes[i].getAttribute("id")+'",this) title="最小化" >0</div><div style="display:none;cursor:hand" onclick=btnMax("frm'+firstXml.childNodes[i].getAttribute("id")+'",this) title="最大化" >1</div>'
					}
				}
				/*//如果帧为可以关闭的,将关闭按钮加上
				if(firstXml.childNodes[i].getAttribute("isclose")=="true")
				{
					tempMain+='<span style="cursor:hand" title="关闭" onclick=btnclose("'+firstXml.childNodes[i].getAttribute("id")+'")>r</span>'
				}*/
				tempMain+='</td></tr><tr><td colspan="2">'
				//如果帧的窗口状态为最大,则将帧加上,反之隐藏帧
				if(firstXml.childNodes[i].getAttribute("size")=="max")
				{
					mainok="true";
					tempMain+='<iframe id="frm'+firstXml.childNodes[i].getAttribute("id")+'"style="display:block;width:100%;height:expression(document.body.clientHeight-'+tempValue+'-2)" FRAMEBORDER=0 SCROLLING=auto SRC="'+firstXml.childNodes[i].getAttribute("url")+'"></iframe>'
				}
				else
				{
					tempMain+='<iframe id="frm'+firstXml.childNodes[i].getAttribute("id")+'"style="display:none;width:100%;height:expression(document.body.clientHeight-'+tempValue+')" FRAMEBORDER=0 SCROLLING=auto SRC="'+firstXml.childNodes[i].getAttribute("url")+'"></iframe>'
				}
				tempMain+='</td></tr></table></td></tr>'
			}
			else
			{
				//alert(firstXml.childNodes[i].getAttribute("icon"))
				
				//判断帧是否为打开状态
				if(firstXml.childNodes[i].getAttribute("state")=="open")
				{
					tempCont2+='<tr><td  style="cursor:n-resize;height:1;border:1 solid #A7A3A5" onmousedown="mvDown()"></td></tr><tr><td id="td'+firstXml.childNodes[i].getAttribute("id")+'"><table style="width:100%;border:2 outset; '+'display:block';
				}
				else
				{
					tempCont2+='<tr><td  style="cursor:n-resize;height:1;border:1 solid #A7A3A5" onmousedown="mvDown()"></td></tr><tr><td id="td'+firstXml.childNodes[i].getAttribute("id")+'"><table style="width:100%;border:2 outset; '+'display:none'
				}
				tempCont2+='" cellspacing=0 cellpadding=0><tr><td style="font-size:9pt;padding-left:5;background:#d4d4dc;background-image:url(images/db.gif);background-repeat:repeat-y"><table cellspacing=0 cellpadding=0 border=0><tr style="cursor:default"><td><img src="'+firstXml.childNodes[i].getAttribute("icon")+'"></td><td style="font-size:9pt;padding-left:5;font-weight:bold">'+firstXml.childNodes[i].getAttribute("title")+'</td></tr></table></td><td align="right" style="font-family:webdings;font-size:9pt;">';
				//如果帧为可以调节窗口大小
				if(firstXml.childNodes[i].getAttribute("resize")=="true")
				{
					//当帧为显示状态时,大小状态为最小化,反之,大小状态为最大化
					if(firstXml.childNodes[i].getAttribute("size")=="min")
					{
						tempCont2+='<div style="display:none;cursor:hand" onclick=btnMin("frm'+firstXml.childNodes[i].getAttribute("id")+'",this) title="最小化" >0</div><div style="display:inline;cursor:hand" onclick=btnMax("frm'+firstXml.childNodes[i].getAttribute("id")+'",this) title="最大化" >1</div>'
					}
					else
					{
						tempCont2+='<div style="display:inline;cursor:hand" onclick=btnMin("frm'+firstXml.childNodes[i].getAttribute("id")+'",this) title="最小化" >0</div><div style="display:none;cursor:hand" onclick=btnMax("frm'+firstXml.childNodes[i].getAttribute("id")+'",this) title="最大化" >1</div>'
					}
				}
				//如果帧为可以关闭的,将关闭按钮加上
				if(firstXml.childNodes[i].getAttribute("isclose")=="true")
				{
					tempCont2+='<div style="display:inline;cursor:hand" title="关闭" onclick=btnclose("td'+firstXml.childNodes[i].getAttribute("id")+'","frm'+firstXml.childNodes[i].getAttribute("id")+'","'+firstXml.childNodes[i].getAttribute("id")+'") >r</div>'
				}
				tempCont2+='</td></tr><tr><td colspan="2">'
				//如果帧的窗口状态为最大,则将帧加上,反之不加帧
				if(firstXml.childNodes[i].getAttribute("size")=="max")
				{
					
						tempCont2+='<iframe id="frm'+firstXml.childNodes[i].getAttribute("id")+'" style="display:block;width:100%;height:'+firstXml.childNodes[i].getAttribute("height")+'" FRAMEBORDER=0 SCROLLING=auto SRC="'+firstXml.childNodes[i].getAttribute("url")+'"></iframe>'
					
				}
				else
				{
					
						tempCont2+='<iframe id="frm'+firstXml.childNodes[i].getAttribute("id")+'" style="display:none;width:100%;height:'+firstXml.childNodes[i].getAttribute("height")+'" FRAMEBORDER=0 SCROLLING=auto SRC="'+firstXml.childNodes[i].getAttribute("url")+'"></iframe>'
					
				}
				tempCont2+='</td></tr></table></td></tr>'
			}
		}
		
	}
	tempCont=tempCont+tempMain+tempCont2+'</table>'
	//alert(tempCont)
	document.body.innerHTML=tempCont;
	mainok="false"
	//document.all("zzz").value=tempCont
}
init();

</script>
</head>

<body style="margin:0;background:#d4d4dc;overflow:hidden">
<script language="javascript">
showFrame()
</script>
</body>

</html>
